name: NodeJS CI
on: push
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ['games/tictactoe', 'packages/client-react']
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Use Node.js 17
      uses: actions/setup-node@v1
      with:
        node-version: 17
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install node modules
      run: npm ci
      working-directory: ${{ matrix.directory }}
    - name: Run lint
      run: npm run lint
      working-directory: ${{ matrix.directory }}
  stylelint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ['games/tictactoe']
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Use Node.js 17
      uses: actions/setup-node@v1
      with:
        node-version: 17
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install node modules
      run: npm ci
      working-directory: ${{ matrix.directory }}
    - name: Run stylelint
      run: npm run stylelint
      working-directory: ${{ matrix.directory }}
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ['games/tictactoe']
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Use Node.js 17
      uses: actions/setup-node@v1
      with:
        node-version: 17
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Prepare local packages
      run: npm ci
      working-directory: packages/client-react
    - name: Install node modules
      run: npm ci
      working-directory: ${{ matrix.directory }}
    - name: Run build
      run: npm run build
      working-directory: ${{ matrix.directory }}
  fmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ['games/tictactoe', 'packages/client-react']
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Use Node.js 17
      uses: actions/setup-node@v1
      with:
        node-version: 17
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install node modules
      run: npm ci
      working-directory: ${{ matrix.directory }}
    - name: Run fmt
      run: npm run fmt -- --check
      working-directory: ${{ matrix.directory }}
